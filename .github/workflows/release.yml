name: Build/release

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install node, npm and yarn
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: olegtarasov/get-tag@v2.1.3
        id: tagName

      - name: Delete outdated drafts
        uses: hugo19941994/delete-draft-releases@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile Electron App
        uses: Yan-Jobs/action-electron-builder@v1.7.0
        env:
          MAIN_VITE_APP_VERSION: $GIT_TAG_NAME
          RENDERER_VITE_APP_VERSION: $GIT_TAG_NAME
          MAIN_VITE_API: ${{secrets.MAIN_VITE_API}}
          MAIN_VITE_TOKEN: ${{secrets.MAIN_VITE_TOKEN}}
          MAIN_VITE_BUGSNAG: ${{secrets.MAIN_VITE_BUGSNAG}}
          RENDERER_VITE_BUGSNAG: ${{secrets.RENDERER_VITE_BUGSNAG}}
          MAIN_VITE_NODE_ENV: production
          RENDERER_VITE_NODE_ENV: production
          APPLE_ID: ${{ secrets.APPLEID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLEIDPASS }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLEIDPASS }}
        with:
          # GitHub token, automatically provided to the action
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

          # signing certificate for Windows
          # windows_certs: {{ secrets.CERTIFICATE_WINDOWS_APPLICATION }}
          # windows_certs_password: {{ secrets.CERTIFICATE_WINDOWS_PASSWORD }}

          # signing certificate for macOS
          mac_certs: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          mac_certs_password: ${{ secrets.CERTIFICATE_OSX_PASSWORD }}
